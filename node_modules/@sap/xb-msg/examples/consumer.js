'use strict';

const MSG = require('../');
const Statistics = require('./util/statistics').ConsumeStatistics;

const options = process.argv.length > 2 ? require(process.argv[2]) : require('./cfg/mqtt-consume-at-most-once');
const maxCount = 100000; const logCount = 1000;
const statistics = new Statistics(maxCount, logCount);

const client = new MSG.Client(options);
const stream = client.istream('MyInpA');

stream
    .on('subscribed', () => {
        console.log('subscribed');
    })
    .on('data', (message) => {
        switch (statistics.onReceive()) {
            case statistics.COUNT:
                message.done();
                return;
            case statistics.COUNT_LOG:
                console.log(statistics.count());
                message.done();
                return;
            case statistics.UNSUBSCRIBE:
                console.log(statistics.count());
                message.done();
                client.disconnect();
                return;
            case statistics.COOLDOWN:
                message.done();
                return;
        }
    });

client
    .on('connected', () => {
        console.log('connected');
    })
    .on('error', (err) => {
        console.log(err);
    })
    .on('disconnected', () => {
        console.log('disconnected');
        statistics.print();
    });

client.connect();

