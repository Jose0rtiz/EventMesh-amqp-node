'use strict';

const util = require('util');

const component = 'msg';

const ERROR_CODES = Object.freeze({

    APP_ARGS_DUPLICATE_ISTREAM_ENTRY: 'application error [001]: non-unique istream ID %s',
    APP_ARGS_DUPLICATE_OSTREAM_ENTRY: 'application error [002]: non-unique ostream ID %s',
    APP_ARGS_INVALID_ISTREAM_ID: 'application error [704]: invalid consumer stream "%s"',
    APP_ARGS_INVALID_OSTREAM_ID: 'application error [707]: invalid producer stream "%s"',
    APP_ARGS_INVALID_OPTIONS_NO_DESTINATIONS: 'application error [708]: invalid options, no destinations',

});

/**
 * @param {string} code
 * @param {...*} params
 * @returns {!Error}
 * @constructor
 * @private
 */
const ErrMsg = (code, ...params) => {
    const message = util.format(component + ' - ' + code, ...params);
    return new Error(message);
};

/**
 * @callback Failed
 * @param {!Error} error
 * @private
 */

/**
 * @param {!Error} error
 * @param {Failed=} callback
 * @param {EventEmitter=} emitter
 * @constructor
 * @private
 */
/**const Raise = (error, callback, emitter) => {
    if (typeof callback === 'function')
        callback(error);
    else if (emitter)
        emitter.emit('error', error);
};*/

module.exports = ErrMsg;
module.exports.Codes = ERROR_CODES;
//module.exports.Raise = Raise;

