'use strict';

const { name, version } = require('../../package.json');

/**
 * @type {Object}
 * @private
 */
module.exports = Object.freeze({
    RUNTIME                       : Object.freeze({
        LIBRARY                   : name,
        VERSION                   : version
    }),
    PROTOCOL                      : Object.freeze({
        WS                        : 'mqtt',
        NAME                      : 'MQTT',
        LEVEL                     : 0x04
    }),
    QOS                           : Object.freeze ({
        AT_MOST_ONCE              : 0x00,
        AT_LEAST_ONCE             : 0x01,
        EXACTLY_ONCE              : 0x02
    }),
    PACKET                        : Object.freeze ({
        TYPES                     : Object.freeze ({
            CONNECT               :  1 << 4,
            CONNACK               :  2 << 4,
            PUBLISH               :  3 << 4,
            PUBACK                :  4 << 4,
            PUBREC                :  5 << 4,
            PUBREL                :  6 << 4,
            PUBCOMP               :  7 << 4,
            SUBSCRIBE             :  8 << 4,
            SUBACK                :  9 << 4,
            UNSUBSCRIBE           : 10 << 4,
            UNSUBACK              : 11 << 4,
            PINGREQ               : 12 << 4,
            PINGRESP              : 13 << 4,
            DISCONNECT            : 14 << 4
        }),
        START                     : Object.freeze ({
            TYPE_BIT_MASK         : 0xF0,
            FLAG_BIT_MASK         : 0x0F
        }),
        LENGTH                    : Object.freeze ({
            UPPER_LIMIT           : 0x10000000,
            BYTE_LIMIT            : 4,
            DATA_BIT_MASK         : 0x7F,
            CONTINUATION_BIT      : 0x80,
            VALUE_BASE            : 128
        })
    }),
    CONNECT                       : Object.freeze({
        FLAG                      : Object.freeze({
            RESERVED              : 1 << 0,
            CLEAN_SESSION         : 1 << 1,
            WILL                  : Object.freeze({
                USED              : 1 << 2,
                QOS               : Object.freeze({
                    AT_MOST_ONCE  : 0 << 3,
                    AT_LEAST_ONCE : 1 << 3,
                    EXACTLY_ONCE  : 2 << 3,
                    BIT_MASK      : 3 << 3,
                }),
                RETAIN            : 1 << 5,
            }),
            PASSWORD              : 1 << 6,
            USER                  : 1 << 7,
        })
    }),
    CONNACK                       : Object.freeze({
        FLAG                      : Object.freeze({
            SESSION_PRESENT       : 0x01
        }),
        RC                        : Object.freeze({
            ACCEPTED              : 0x00,
            UNACCEPTABLE_LEVEL    : 0x01,
            CLIENT_ID_REJECTED    : 0x02,
            SERVICE_UNAVAILABLE   : 0x03,
            BAD_CREDENTIALS       : 0x04,
            NOT_AUTHORIZED        : 0x05
        })
    }),
    PUBLISH                       : Object.freeze ({
        FLAG                      : Object.freeze ({
            DUPLICATE             : 1 << 3,
            QOS                   : Object.freeze({
                AT_MOST_ONCE      : 0 << 1,
                AT_LEAST_ONCE     : 1 << 1,
                EXACTLY_ONCE      : 2 << 1,
                BIT_MASK          : 3 << 1,
            }),
            RETAIN                : 1 << 0
        })
    }),
    PUBREL                        : Object.freeze ({
        FLAG                      : Object.freeze({
            RESERVED              : 1 << 1
        })
    }),
    SUBSCRIBE                     : Object.freeze ({
        FLAG                      : Object.freeze({
            RESERVED              : 1 << 1
        })
    }),
    UNSUBSCRIBE                   : Object.freeze ({
        FLAG                      : Object.freeze({
            RESERVED              : 1 << 1
        })
    }),
    SUBACK                        : Object.freeze ({
        RC                        : Object.freeze ({
            AT_MOST_ONCE          : 0x00,
            AT_LEAST_ONCE         : 0x01,
            EXACTLY_ONCE          : 0x02,
            FAILURE               : 0x80
        })
    }),
});

